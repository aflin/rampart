v0.5.0 (First Beta release)
    - rampart          Array.includes() -NaN check.
                       Use babel command line opt.
                       Babel in REPL
                       console.js example program fixup
                       Freebsd initial support.
    - rampart-redis    Error message provided in callbacks.
    - rampart-server   Added rampart-webserver.js for easy config and
                       command line use.
                       Secured access to html tree only.
                       appendProcTitle option, default false
    - rampart-almanac  Initial Version
    - rampart-lmdb     Upgraded core lib to LMDB 0.9.33
    - rampart.utils    Added fork and pipe functions.
                       errorConfig for simplified error messages and error
                       line printing.
                       timezone().
                       autoScanDate().
                       daemon() - like fork
                       fopen and fopenBuffer, stdin/out/err redirect.
                       stringToNumber()
                       signal names for kill()
                       printf et al, catch and throw proper error for too
                       few params.
    - rampart-sql      connection() instead of init(). connect() shortcut.
                       query() does not throw.  exec() always throws.
                       Child processes are now fork/exec model.
                       Self Destruct added to child if parent dies.
                       Experimental index update scheduler.
    - rapart.python    Self Destruct added to child if parent dies.
    - rampart.thread   getId() and  getCurrentId().
                       keepOpen option for new rampart.thread().
                       setCaCert().
    - rampart.net      Use same method as rampart-curl to find cert.
    - rampart.curl     If cert not found in standard location, search and
                       use from other locations automatically.
                       setCaCert().
v0.2.3 (unpublished)
    - rampart-thread   Multiple bug fixes for locks and thread race
                       conditions
    - rampart-sql      Added addTables and init({addtables:true});
    - rampart-html     Added objToHtml and toObj; prettyPrint available
                       to all html objects and takes parameters.
                       Added .destroy() method.  Call duk_gc after x number
                       of documents created (duktape is slow to call
                       finalizer).
                       Added glob space and quote processing to, e.g.
                           findAttr('title="my \\"awesome\\" title about*");
                       Added tracking of doc to know if sub-element objects
                       are valid.
    - rampart          Added Array.prototype.includes().
                       Fixed exec() waitpid rare fail.
                       Fixed repl continue line ... ctrl-c no longer exits.
    - rampart-server   Added simplified api for creating server modules in c.
                       Fixed module compiling error causing crash, now reporting
                       as 500 Server Error.
    - rampart.thread   Some locking fixes for clipboard.
                       rampart.thread.onGet() - async listen for clipboard
                       changes.
    - rampart-url      Node compat and '+' query fixes.

v0.2.2
    - rampart-gm       Initial unsupported graphicsmagick module.
                       Unsupported because of many required external libs.
    - rampart-server   Fixed websocket bug - processing leftover data in
                       buffer.
    - rampart-curl     Restructure fetch and submit functions.  Added
                       fetchAsync and submitAsync. Added noCopyBuffer
                       option.
    - rampart-utils:   Fixed stat and lstat user and group bug.
                       Added fopenBuffer().
                       Rework of rp_find_path - now variadic.
    - rampart:         Rework of module loading.  Respects relative paths
                       of modules loading modules.
                       Added "use babelGlobally" to automatically babelize
                       modules and includes.

v0.2.1
    - rampart:         Many small bug fixes
                       Interactive: -g typeahead suggestion. Last var on
                       stack objects now output as json rather than console.log
    - rampart-server:  Post var form data is now assumed to be text unless
                       it includes a filename parameter (sprintf will work in any
                       case, even if binary).
                       Post vars processes arrays and objects same as queryToObject()
    - rampart-sql:     Rewrite of texis handle cache.  Fix error messages
                       and other bugs.
                       Updated texislockd to handle more connections.
                       Added Sql.searchText().
                       Fixed bug when forking while setting texis globals
                       via setprop().
                       Fixed fsopen in texis library (newer linux bailed).
    - rampart-utils:   added forkpty() - allows browser terminal emulation
                       when used with websockets and xterm.js.
                       stat() - added "readable", "writable", "executable"
                                "owner", "group" properties to return object.
                       lstat() - "readable", "writable" refer to the link.
                       queryToObject() - added processing of Object-like params
                       (e.g. ?myvar[mykey]=myval&myvar[mykey2]=myval2).
                       touch() now takes dates and numbers(seconds).
                       exec() now takes options {args: [array,of,args], cd: "/working/dir"}
    - rampart-crytpo:  bug fix - crypt - bad pop for hex key or iv
v0.2.0
    - rampart-python:  initial version, with threading and forking support
    - rampart.threads: initial version, other modules updated with new lock system,
                       user locks and other mods to support user threads
    - rampart:         eval now supports use of template literals and babel.
                       multiple minor bug fixes.
    - scripts:         added make_cmod_template.js which makes templates for
                       user c modules and tests.
    - rampart.utils:   printf %J and rampart.utils.toJsonSafe print a safe
                       version of JSON for self referencing object.
v0.1.3 (unpublished)
    - main:            lock for exit functions
    - rampart-sql:     added missing handle close in sql.reset
    - rampart-server:  fixed cookie parsing
    - rampart-sql:     fixed faulty passing of user argument to callback in exec
    - rampart-sql:     revamp of reset of global texis parameters, as the
                       internal texis method caused a significant slowdown
    - rampart-sql:     bug fix for missing grab of error buffer before printing
    - rampart.utils:   bug fix for closing pipe twice
    - rampart-server:  added setting for libevent for max single read/write
    - rampart-sql:     bug fix for reset of texis settings when switching handles
v0.1.2
    - rampart-net:     resolve error message fixes
    - rampart-net:     added resolver.reverse ip to name functions
    - rampart-url:     made module compatible with node
    - rampart-server:  bug fix: check return val is object before looking for property 'defer'
    - rampart-server:  check for cyclic references before returning object JSON
v0.1.1
    - Sql.rexFile:     removed buffer, using mmap instead
    - main:            Template Literal translation improvements
    - main:            setTimeout et al - accept parameters
    - scripts:         Added log rotation to web_server_conf.js
    - rampart.utils:   fixed stat file dates on 32 bit systems
    - rampart-net:     initial version,  node.js like net function with ssl
    - main:            fixed segfault on clearTimeout when event expired
    - rampart.server:  improved libevhtp_ws thread load balancing
    - rampart.server:  added server req.reply and return val {defer:true}
    - main:            additional node.js style buffer options
    - rampart.utils:   abprintf() - append existing buffer
v0.1.0
    - initial release
